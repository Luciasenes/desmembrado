%!PS-Adobe-3.0 EPSF-3.0
%%BoundingBox: 201 324 395 518 
%%LanguageLevel: 1
%%Creator: CorelDRAW 9
%%Title: Eukanuba.eps
%%CreationDate: Sat Mar 11 16:51:04 2000
%%For: LDN
%%DocumentProcessColors: Black 
%%DocumentSuppliedResources: (atend)
%%EndComments
%%BeginProlog
/AutoFlatness false def
/AutoSteps 0 def
/CMYKMarks true def
/UseLevel 1 def
%Build: CorelDRAW 9 Version 9.397
%Color profile:  Generic offset separations profile
%%BeginResource: procset wCorel9Dict 9.0 0
/wCorel9Dict 300 dict def wCorel9Dict begin
% Copyright (c)1992-1999 Corel Corporation
% All rights reserved.     v9.0 r0.5
/bd{bind def}bind def/ld{load def}bd/xd{exch def}bd/_ null def/rp{{pop}repeat}
bd/@cp/closepath ld/@gs/gsave ld/@gr/grestore ld/@np/newpath ld/Tl/translate ld
/$sv 0 def/@sv{/$sv save def}bd/@rs{$sv restore}bd/spg/showpage ld/showpage{}
bd currentscreen/@dsp xd/$dsp/@dsp def/$dsa xd/$dsf xd/$sdf false def/$SDF
false def/$Scra 0 def/SetScr/setscreen ld/@ss{2 index 0 eq{$dsf 3 1 roll 4 -1
roll pop}if exch $Scra add exch load SetScr}bd/SepMode_5 where{pop}{/SepMode_5
0 def}ifelse/CurrentInkName_5 where{pop}{/CurrentInkName_5(Composite)def}
ifelse/$ink_5 where{pop}{/$ink_5 -1 def}ifelse/$c 0 def/$m 0 def/$y 0 def/$k 0
def/$t 1 def/$n _ def/$o 0 def/$fil 0 def/$C 0 def/$M 0 def/$Y 0 def/$K 0 def
/$T 1 def/$N _ def/$O 0 def/$PF false def/s1c 0 def/s1m 0 def/s1y 0 def/s1k 0
def/s1t 0 def/s1n _ def/$bkg false def/SK 0 def/SM 0 def/SY 0 def/SC 0 def/$op
false def matrix currentmatrix/$ctm xd/$ptm matrix def/$ttm matrix def/$stm
matrix def/$ffpnt true def/CorelDrawReencodeVect[16#0/grave 16#5/breve
16#6/dotaccent 16#8/ring 16#A/hungarumlaut 16#B/ogonek 16#C/caron 16#D/dotlessi
16#27/quotesingle 16#60/grave 16#7C/bar
16#82/quotesinglbase/florin/quotedblbase/ellipsis/dagger/daggerdbl
16#88/circumflex/perthousand/Scaron/guilsinglleft/OE
16#91/quoteleft/quoteright/quotedblleft/quotedblright/bullet/endash/emdash
16#98/tilde/trademark/scaron/guilsinglright/oe 16#9F/Ydieresis
16#A1/exclamdown/cent/sterling/currency/yen/brokenbar/section
16#a8/dieresis/copyright/ordfeminine/guillemotleft/logicalnot/minus/registered/macron
16#b0/degree/plusminus/twosuperior/threesuperior/acute/mu/paragraph/periodcentered
16#b8/cedilla/onesuperior/ordmasculine/guillemotright/onequarter/onehalf/threequarters/questiondown
16#c0/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE/Ccedilla
16#c8/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex/Idieresis
16#d0/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis/multiply
16#d8/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn/germandbls
16#e0/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
16#e8/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
16#f0/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide
16#f8/oslash/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/L2?/languagelevel where{pop languagelevel 2 ge}{false}ifelse def/Comp?{
/LumSepsDict where{pop false}{/AldusSepsDict where{pop false}{1 0 0 0 @gs
setcmykcolor currentcmykcolor @gr add add add 0 ne 0 1 0 0 @gs setcmykcolor
currentcmykcolor @gr add add add 0 ne 0 0 1 0 @gs setcmykcolor currentcmykcolor
@gr add add add 0 ne 0 0 0 1 @gs setcmykcolor currentcmykcolor @gr add add add
0 ne and and and}ifelse}ifelse}bd/@PL{/LV where{pop LV 2 ge L2? not and{@np
/Courier findfont 12 scalefont setfont 72 144 m
(The PostScript level set in the Corel application is higher than)show 72 132 m
(the PostScript level of this device. Change the PS Level in the Corel)show 72
120 m(application to Level 1 by selecting the PostScript tab in the print)show
72 108 m(dialog, and selecting Level 1 from the Compatibility drop down list.)
show flush spg quit}if}if}bd/@BeginSysCorelDict{systemdict/Corel30Dict known
{systemdict/Corel30Dict get exec}if systemdict/CorelLexDict known{1 systemdict
/CorelLexDict get exec}if}bd/@EndSysCorelDict{systemdict/Corel30Dict known
{end}if/EndCorelLexDict where{pop EndCorelLexDict}if}bd AutoFlatness{/@ifl{dup
currentflat exch sub 10 gt{
([Error: PathTooComplex; OffendingCommand: AnyPaintingOperator]\n)print flush
@np exit}{currentflat 2 add setflat}ifelse}bd/@fill/fill ld/fill{currentflat{
{@fill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@eofill/eofill ld/eofill
{currentflat{{@eofill}stopped{@ifl}{exit}ifelse}bind loop setflat}bd/@clip
/clip ld/clip{currentflat{{@clip}stopped{@ifl}{exit}ifelse}bind loop setflat}
bd/@eoclip/eoclip ld/eoclip{currentflat{{@eoclip}stopped{@ifl}{exit}ifelse}
bind loop setflat}bd/@stroke/stroke ld/stroke{currentflat{{@stroke}stopped
{@ifl}{exit}ifelse}bind loop setflat}bd}if L2?{/@ssa{true setstrokeadjust}bd}{
/@ssa{}bd}ifelse/d/setdash ld/j/setlinejoin ld/J/setlinecap ld/M/setmiterlimit
ld/w/setlinewidth ld/O{/$o xd}bd/R{/$O xd}bd/W/eoclip ld/c/curveto ld/C/c ld/l
/lineto ld/L/l ld/rl/rlineto ld/m/moveto ld/n/newpath ld/N/newpath ld/P{11 rp}
bd/u{}bd/U{}bd/A{pop}bd/q/@gs ld/Q/@gr ld/&{}bd/@j{@sv @np}bd/@J{@rs}bd/g{1
exch sub/$k xd/$c 0 def/$m 0 def/$y 0 def/$t 1 def/$n _ def/$fil 0 def}bd/G{1
sub neg/$K xd _ 1 0 0 0/$C xd/$M xd/$Y xd/$T xd/$N xd}bd/k{1 index type
/stringtype eq{/$t xd/$n xd}{/$t 0 def/$n _ def}ifelse/$k xd/$y xd/$m xd/$c xd
/$fil 0 def}bd/K{1 index type/stringtype eq{/$T xd/$N xd}{/$T 0 def/$N _ def}
ifelse/$K xd/$Y xd/$M xd/$C xd}bd/x/k ld/X/K ld/sf{1 index type/stringtype eq{
/s1t xd/s1n xd}{/s1t 0 def/s1n _ def}ifelse/s1k xd/s1y xd/s1m xd/s1c xd}bd/i{
dup 0 ne{setflat}{pop}ifelse}bd/v{4 -2 roll 2 copy 6 -2 roll c}bd/V/v ld/y{2
copy c}bd/Y/y ld/@w{matrix rotate/$ptm xd matrix scale $ptm dup concatmatrix
/$ptm xd 1 eq{$ptm exch dup concatmatrix/$ptm xd}if 1 w}bd/@g{1 eq dup/$sdf xd
{/$scp xd/$sca xd/$scf xd}if}bd/@G{1 eq dup/$SDF xd{/$SCP xd/$SCA xd/$SCF xd}
if}bd/@D{2 index 0 eq{$dsf 3 1 roll 4 -1 roll pop}if 3 copy exch $Scra add exch
load SetScr/$dsp xd/$dsa xd/$dsf xd}bd/$ngx{$SDF{$SCF SepMode_5 0 eq{$SCA}
{$dsa}ifelse $SCP @ss}if}bd/p{/$pm xd 7 rp/$pyf xd/$pxf xd/$pn xd/$fil 1 def}
bd/@MN{2 copy le{pop}{exch pop}ifelse}bd/@MX{2 copy ge{pop}{exch pop}ifelse}bd
/InRange{3 -1 roll @MN @MX}bd/@sqr{dup 0 rl dup 0 exch rl neg 0 rl @cp}bd
/currentscale{1 0 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt 0 1 dtransform matrix defaultmatrix idtransform dup mul exch dup
mul add sqrt}bd/@unscale{}bd/wDstChck{2 1 roll dup 3 -1 roll eq{1 add}if}bd
/@dot{dup mul exch dup mul add 1 exch sub}bd/@lin{exch pop abs 1 exch sub}bd
/cmyk2rgb{3{dup 5 -1 roll add 1 exch sub dup 0 lt{pop 0}if exch}repeat pop}bd
/rgb2cmyk{3{1 exch sub 3 1 roll}repeat 3 copy @MN @MN 3{dup 5 -1 roll sub neg
exch}repeat}bd/rgb2g{2 index .299 mul 2 index .587 mul add 1 index .114 mul add
4 1 roll pop pop pop}bd/WaldoColor_5 where{pop}{/SetRgb/setrgbcolor ld/GetRgb
/currentrgbcolor ld/SetGry/setgray ld/GetGry/currentgray ld/SetRgb2 systemdict
/setrgbcolor get def/GetRgb2 systemdict/currentrgbcolor get def/SetHsb
systemdict/sethsbcolor get def/GetHsb systemdict/currenthsbcolor get def
/rgb2hsb{SetRgb2 GetHsb}bd/hsb2rgb{3 -1 roll dup floor sub 3 1 roll SetHsb
GetRgb2}bd/setcmykcolor where{pop/LumSepsDict where{pop/SetCmyk_5{LumSepsDict
/setcmykcolor get exec}def}{/AldusSepsDict where{pop/SetCmyk_5{AldusSepsDict
/setcmykcolor get exec}def}{/SetCmyk_5/setcmykcolor ld}ifelse}ifelse}{
/SetCmyk_5{cmyk2rgb SetRgb}bd}ifelse/currentcmykcolor where{pop/GetCmyk
/currentcmykcolor ld}{/GetCmyk{GetRgb rgb2cmyk}bd}ifelse/setoverprint where
{pop}{/setoverprint{/$op xd}bd}ifelse/currentoverprint where{pop}{
/currentoverprint{$op}bd}ifelse/@tc_5{5 -1 roll dup 1 ge{pop}{4{dup 6 -1 roll
mul exch}repeat pop}ifelse}bd/@trp{exch pop 5 1 roll @tc_5}bd
/setprocesscolor_5{SepMode_5 0 eq{SetCmyk_5}{0 4 $ink_5 sub index exch pop 5 1
roll pop pop pop pop SepsColor true eq{$ink_5 3 gt{1 sub neg SetGry}{0 0 0 4
$ink_5 roll SetCmyk_5}ifelse}{1 sub neg SetGry}ifelse}ifelse}bd
/findcmykcustomcolor where{pop}{/findcmykcustomcolor{5 array astore}bd}ifelse
/setcustomcolor where{pop}{/setcustomcolor{exch aload pop SepMode_5 0 eq{pop
@tc_5 setprocesscolor_5}{CurrentInkName_5 eq{4 index}{0}ifelse 6 1 roll 5 rp 1
sub neg SetGry}ifelse}bd}ifelse/@scc_5{dup type/booleantype eq{setoverprint}{1
eq setoverprint}ifelse dup _ eq{pop setprocesscolor_5 pop}{findcmykcustomcolor
exch setcustomcolor}ifelse SepMode_5 0 eq{true}{GetGry 1 eq currentoverprint
and not}ifelse}bd/colorimage where{pop/ColorImage{colorimage}def}{/ColorImage{
/ncolors xd/$multi xd $multi true eq{ncolors 3 eq{/daqB xd/daqG xd/daqR xd pop
pop exch pop abs{daqR pop daqG pop daqB pop}repeat}{/daqK xd/daqY xd/daqM xd
/daqC xd pop pop exch pop abs{daqC pop daqM pop daqY pop daqK pop}repeat}
ifelse}{/dataaq xd{dataaq ncolors dup 3 eq{/$dat xd 0 1 $dat length 3 div 1 sub
{dup 3 mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index
2 add get 255 div rgb2g 255 mul cvi exch pop $dat 3 1 roll put}for $dat 0 $dat
length 3 idiv getinterval pop}{4 eq{/$dat xd 0 1 $dat length 4 div 1 sub{dup 4
mul $dat 1 index get 255 div $dat 2 index 1 add get 255 div $dat 3 index 2 add
get 255 div $dat 4 index 3 add get 255 div cmyk2rgb rgb2g 255 mul cvi exch pop
$dat 3 1 roll put}for $dat 0 $dat length ncolors idiv getinterval}if}ifelse}
image}ifelse}bd}ifelse/setcmykcolor{1 5 1 roll _ currentoverprint @scc_5
/$ffpnt xd}bd/currentcmykcolor{GetCmyk}bd/setrgbcolor{rgb2cmyk setcmykcolor}bd
/currentrgbcolor{currentcmykcolor cmyk2rgb}bd/sethsbcolor{hsb2rgb setrgbcolor}
bd/currenthsbcolor{currentrgbcolor rgb2hsb}bd/setgray{dup dup setrgbcolor}bd
/currentgray{currentrgbcolor rgb2g}bd/InsideDCS false def/IMAGE/image ld/image
{InsideDCS{IMAGE}{/EPSDict where{pop SepMode_5 0 eq{IMAGE}{dup type/dicttype eq
{dup/ImageType get 1 ne{IMAGE}{dup dup/BitsPerComponent get 8 eq exch
/BitsPerComponent get 1 eq or currentcolorspace 0 get/DeviceGray eq and{
CurrentInkName_5(Black)eq{IMAGE}{dup/DataSource get/TCC xd/Height get abs{TCC
pop}repeat}ifelse}{IMAGE}ifelse}ifelse}{2 index 1 ne{CurrentInkName_5(Black)eq
{IMAGE}{/TCC xd pop pop exch pop abs{TCC pop}repeat}ifelse}{IMAGE}ifelse}
ifelse}ifelse}{IMAGE}ifelse}ifelse}bd}ifelse/WaldoColor_5 true def/@sft{$tllx
$pxf add dup $tllx gt{$pwid sub}if/$tx xd $tury $pyf sub dup $tury lt{$phei
add}if/$ty xd}bd/@stb{pathbbox/$ury xd/$urx xd/$lly xd/$llx xd}bd/@ep{{cvx exec
}forall}bd/@tp{@sv/$in true def 2 copy dup $lly le{/$in false def}if $phei sub
$ury ge{/$in false def}if dup $urx ge{/$in false def}if $pwid add $llx le{/$in
false def}if $in{@np 2 copy m $pwid 0 rl 0 $phei neg rl $pwid neg 0 rl 0 $phei
rl clip @np $pn cvlit load aload pop 7 -1 roll 5 index sub 7 -1 roll 3 index
sub Tl matrix currentmatrix/$ctm xd @ep pop pop pop pop}{pop pop}ifelse @rs}bd
/@th{@sft 0 1 $tly 1 sub{dup $psx mul $tx add{dup $llx gt{$pwid sub}{exit}
ifelse}loop exch $phei mul $ty exch sub 0 1 $tlx 1 sub{$pwid mul 3 copy 3 -1
roll add exch @tp pop}for pop pop}for}bd/@tv{@sft 0 1 $tlx 1 sub{dup $pwid mul
$tx add exch $psy mul $ty exch sub{dup $ury lt{$phei add}{exit}ifelse}loop 0 1
$tly 1 sub{$phei mul 3 copy sub @tp pop}for pop pop}for}bd/$fm 0 def/wfill{1
$fm eq{fill}{eofill}ifelse}bd/wclip{1 $fm eq{clip}{eoclip}ifelse}bd/@pf{@gs
$ctm setmatrix $pm concat @stb wclip @sv Bburx Bbury $pm itransform/$tury xd
/$turx xd Bbllx Bblly $pm itransform/$tlly xd/$tllx xd newpath $tllx $tlly m
$tllx $tury l $turx $tury l $turx $tlly l $tllx $tlly m @cp pathbbox @rs/$tury
xd/$turx xd/$tlly xd/$tllx xd/$wid $turx $tllx sub def/$hei $tury $tlly sub def
@gs $vectpat{1 0 0 0 0 _ $o @scc_5{wfill}if}{$t $c $m $y $k $n $o @scc_5{
SepMode_5 0 eq $pfrg or{$tllx $tlly Tl $wid $hei scale <00> 8 1 false[8 0 0 1 0
0]{}imagemask}{/$bkg true def}ifelse}if}ifelse @gr $wid 0 gt $hei 0 gt and{$pn
cvlit load aload pop/$pd xd 3 -1 roll sub/$phei xd exch sub/$pwid xd $wid $pwid
div ceiling 1 add/$tlx xd $hei $phei div ceiling 1 add/$tly xd $psx 0 eq{@tv}{
@th}ifelse}if @gr @np/$bkg false def}bd/@Pf{@sv SepMode_5 0 eq $Psc 0 ne or
$ink_5 3 eq or{0 J 0 j[]0 d $t $c $m $y $k $n $o @scc_5 pop $ctm setmatrix 72
1000 div dup matrix scale dup concat dup Bburx exch Bbury exch itransform
ceiling cvi/Bbury xd ceiling cvi/Bburx xd Bbllx exch Bblly exch itransform
floor cvi/Bblly xd floor cvi/Bbllx xd $Prm aload pop $Psn load exec}{1 SetGry
wfill}ifelse @rs @np}bd/F{matrix currentmatrix $sdf{$scf $sca $scp @ss}if $fil
1 eq{@pf}{$fil 2 eq{@ff}{$fil 3 eq{@Pf}{$t $c $m $y $k $n $o @scc_5{wfill}
{@np}ifelse}ifelse}ifelse}ifelse $sdf{$dsf $dsa $dsp @ss}if setmatrix}bd/f{@cp
F}bd/S{matrix currentmatrix $ctm setmatrix $SDF{$SCF $SCA $SCP @ss}if $T $C $M
$Y $K $N $O @scc_5{matrix currentmatrix $ptm concat stroke setmatrix}
{@np}ifelse $SDF{$dsf $dsa $dsp @ss}if setmatrix}bd/s{@cp S}bd/B{@gs F @gr S}
bd/b{@cp B}bd/_E{5 array astore exch cvlit xd}bd/@cc{currentfile $dat
readhexstring pop}bd/@sm{/$ctm $ctm currentmatrix def}bd/@E{/Bbury xd/Bburx xd
/Bblly xd/Bbllx xd}bd/@c{@cp}bd/@p{/$fil 1 def 1 eq dup/$vectpat xd{/$pfrg true
def}{@gs $t $c $m $y $k $n $o @scc_5/$pfrg xd @gr}ifelse/$pm xd/$psy xd/$psx xd
/$pyf xd/$pxf xd/$pn xd}bd/@P{/$fil 3 def/$Psn xd/$Psc xd array astore/$Prm xd
}bd/@ii{concat 3 index 3 index m 3 index 1 index l 2 copy l 1 index 3 index l 3
index 3 index l clip pop pop pop pop}bd/tcc{@cc}def/@i{@sm @gs @ii 6 index 1 ne
{/$frg true def pop pop}{1 eq{s1t s1c s1m s1y s1k s1n $O @scc_5/$frg xd}{/$frg
false def}ifelse 1 eq{@gs $ctm setmatrix F @gr}if}ifelse @np/$ury xd/$urx xd
/$lly xd/$llx xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul 8 div ceiling cvi
string def $bkg $frg or{$SDF{$SCF $SCA $SCP @ss}if $llx $lly Tl $urx $llx sub
$ury $lly sub scale $bkg{$t $c $m $y $k $n $o @scc_5 pop}if $wid $hei abs $bts
1 eq{$bkg}{$bts}ifelse[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]/tcc load
$bts 1 eq{imagemask}{image}ifelse $SDF{$dsf $dsa $dsp @ss}if}{$hei abs{tcc pop}
repeat}ifelse @gr $ctm setmatrix}bd/@I{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd
/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd $ngx $llx $lly Tl $urx $llx sub $ury
$lly sub scale $wid $hei abs $bts[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse
]$msimage false eq $ncl 1 eq or{/$dat $wid $bts mul $ncl mul 8 div ceiling cvi
string def/@cc load false $ncl ColorImage}{$wid $bts mul 8 div ceiling cvi $ncl
3 eq{dup dup/$dat1 exch string def/$dat2 exch string def/$dat3 exch string def
/@cc1 load/@cc2 load/@cc3 load}{dup dup dup/$dat1 exch string def/$dat2 exch
string def/$dat3 exch string def/$dat4 exch string def/@cc1 load/@cc2 load
/@cc3 load/@cc4 load}ifelse true $ncl ColorImage}ifelse $SDF{$dsf $dsa $dsp
@ss}if @gr $ctm setmatrix}bd/@cc1{currentfile $dat1 readhexstring pop}bd/@cc2{
currentfile $dat2 readhexstring pop}bd/@cc3{currentfile $dat3 readhexstring pop
}bd/@cc4{currentfile $dat4 readhexstring pop}bd/$msimage false def/COMP 0 def
/MaskedImage false def L2?{/@I_2{@sm @gs @ii @np/$ury xd/$urx xd/$lly xd/$llx
xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul $ncl mul 8 div ceiling
cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq{/DeviceRGB}{/DeviceCMYK}
ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub $ury $lly sub scale 8
dict begin/ImageType 1 def/Width $wid def/Height $hei abs def/BitsPerComponent
$bts def/Decode $ncl 1 eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}
ifelse}ifelse def/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def
/DataSource currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP
2 eq{/RunLengthDecode filter}if}ifelse def currentdict end image $SDF{$dsf $dsa
$dsp @ss}if @gr $ctm setmatrix}bd}{/@I_2{}bd}ifelse/@I_3{@sm @gs @ii @np/$ury
xd/$urx xd/$lly xd/$llx xd/$ncl xd/$bts xd/$hei xd/$wid xd/$dat $wid $bts mul
$ncl mul 8 div ceiling cvi string def $ngx $ncl 1 eq{/DeviceGray}{$ncl 3 eq
{/DeviceRGB}{/DeviceCMYK}ifelse}ifelse setcolorspace $llx $lly Tl $urx $llx sub
$ury $lly sub scale/ImageDataDict 8 dict def ImageDataDict begin/ImageType 1
def/Width $wid def/Height $hei abs def/BitsPerComponent $bts def/Decode $ncl 1
eq{[0 1]}{$ncl 3 eq{[0 1 0 1 0 1]}{[0 1 0 1 0 1 0 1]}ifelse}ifelse def
/ImageMatrix[$wid 0 0 $hei neg 0 $hei 0 gt{$hei}{0}ifelse]def/DataSource
currentfile/ASCII85Decode filter COMP 1 eq{/DCTDecode filter}{COMP 2 eq{
/RunLengthDecode filter}if}ifelse def end/MaskedImageDict 7 dict def
MaskedImageDict begin/ImageType 3 def/InterleaveType 3 def/MaskDict
ImageMaskDict def/DataDict ImageDataDict def end MaskedImageDict image $SDF
{$dsf $dsa $dsp @ss}if @gr $ctm setmatrix}bd/@SetMask{/$mbts xd/$mhei xd/$mwid
xd/ImageMaskDict 8 dict def ImageMaskDict begin/ImageType 1 def/Width $mwid def
/Height $mhei abs def/BitsPerComponent $mbts def/DataSource maskstream def
/ImageMatrix[$mwid 0 0 $mhei neg 0 $mhei 0 gt{$mhei}{0}ifelse]def/Decode[1 0]
def end}bd/@B{@gs S @gr F}bd/@b{@cp @B}bd/@sep{CurrentInkName_5(Composite)eq
{/$ink_5 -1 def}{CurrentInkName_5(Cyan)eq{/$ink_5 0 def}{CurrentInkName_5
(Magenta)eq{/$ink_5 1 def}{CurrentInkName_5(Yellow)eq{/$ink_5 2 def}{
CurrentInkName_5(Black)eq{/$ink_5 3 def}{/$ink_5 4 def}ifelse}ifelse}ifelse}
ifelse}ifelse}bd/@whi{@gs -72000 dup m -72000 72000 l 72000 dup l 72000 -72000
l @cp 1 SetGry fill @gr}bd/@neg{[{1 exch sub}/exec cvx currenttransfer/exec
cvx]cvx settransfer @whi}bd/deflevel 0 def/@sax{/deflevel deflevel 1 add def}
bd/@eax{/deflevel deflevel dup 0 gt{1 sub}if def deflevel 0 gt{/eax load}{eax}
ifelse}bd/eax{{exec}forall}bd/@rax{deflevel 0 eq{@rs @sv}if}bd/@daq{dup type
/arraytype eq{{}forall}if}bd/@BMP{/@cc xd UseLevel 3 eq MaskedImage true eq and
{7 -2 roll pop pop @I_3}{12 index 1 gt UseLevel 2 eq UseLevel 3 eq or and{7 -2
roll pop pop @I_2}{11 index 1 eq{12 -1 roll pop @i}{7 -2 roll pop pop @I}
ifelse}ifelse}ifelse}bd systemdict/pdfmark known not{/pdfmark/cleartomark ld}
if
end
%%EndResource
%%EndProlog
%%BeginSetup
wCorel9Dict begin
@BeginSysCorelDict
2.6131 setmiterlimit
1.00 setflat
/$fst 128 def
%%EndSetup

%%Page: 1 1
%LogicalPage: 1
%%BeginPageSetup
@sv
@sm
@sv
%%EndPageSetup
@rax %Note: Object
201.25984 324.56693 394.01575 517.32283 @E
 0 O 0 @g
0.00 0.00 0.00 0.00 k
/$fm 0 def
201.25984 517.32283 m
394.01575 517.32283 L
394.01575 324.56693 L
201.25984 324.56693 L
201.25984 517.32283 L
@c
F

@rax %Note: Object
204.09449 406.61433 391.18110 435.27572 @E
 0 O 0 @g
0.00 0.00 0.00 1.00 k
/$fm 0 def
222.05339 411.33090 m
221.98734 411.52847 221.92157 411.72576 221.85581 411.98882 C
221.13241 413.23861 220.14567 413.69924 218.69830 413.76501 C
212.25146 413.76501 L
212.25146 415.14633 L
216.98787 415.14633 L
218.50101 415.14633 219.75080 415.73849 220.14567 417.31739 C
220.34296 418.04079 220.34296 418.89600 220.07962 419.61969 C
219.48775 420.93496 218.43524 421.26406 216.98787 421.32983 C
212.25146 421.32983 L
212.25146 422.31657 L
218.17219 422.31657 L
219.61928 422.31657 220.93483 422.77691 221.52699 424.15852 C
221.85581 424.88192 221.85581 425.73713 221.65852 426.52658 C
221.13241 428.23701 219.75080 428.69735 218.10614 428.76312 C
208.83090 428.76312 L
205.60762 428.69735 204.16025 427.51332 204.09449 424.22428 C
204.09449 411.46271 L
204.16025 408.76554 205.21276 407.51575 207.97569 407.18665 C
208.56784 407.12088 L
218.56677 407.12088 L
220.07962 407.18665 221.32970 407.64728 221.92157 409.02860 C
221.98734 409.22589 222.05339 409.29165 222.05339 409.48923 C
222.18491 410.08110 222.18491 410.73902 222.05339 411.33090 C
@c
391.18110 416.98828 m
391.18110 417.90926 390.52318 418.56718 389.73402 418.56718 C
388.87880 418.56718 388.15512 417.90926 388.15512 416.98828 C
388.15512 416.19883 388.87880 415.47543 389.73402 415.47543 C
389.73402 415.67272 L
390.45742 415.67272 391.04957 416.26460 391.04957 416.98828 C
391.04957 417.77773 390.45742 418.36989 389.73402 418.36989 C
388.94457 418.36989 388.41817 417.77773 388.41817 416.98828 C
388.41817 416.26460 388.94457 415.67272 389.73402 415.67272 C
391.18110 416.98828 L
@c
389.73402 415.47543 m
391.18110 416.98828 L
391.18110 416.19883 390.52318 415.47543 389.73402 415.47543 C
@c
389.73402 417.18557 m
389.33915 417.18557 L
389.33915 417.71197 L
389.73402 417.71197 L
389.86554 417.71197 L
390.06283 417.71197 390.19436 417.64620 390.19436 417.38315 C
390.12860 417.18557 390.06283 417.18557 389.86554 417.18557 C
389.73402 417.18557 L
@c
389.73402 417.90926 m
389.86554 417.90926 L
390.12860 417.90926 390.39165 417.84350 390.45742 417.51468 C
390.45742 417.25134 390.39165 417.18557 390.19436 417.05405 C
390.39165 416.92252 390.39165 416.92252 390.39165 416.59370 C
390.45742 416.39641 390.39165 416.39641 390.52318 416.19883 C
390.19436 416.19883 L
390.12860 416.46217 L
390.12860 416.65946 390.26013 416.92252 389.86554 416.92252 C
389.73402 416.92252 L
389.33915 416.92252 L
389.33915 416.19883 L
389.14186 416.19883 L
389.14186 417.90926 L
389.73402 417.90926 L
@c
351.71121 415.73849 m
352.50066 415.73849 L
351.71121 418.63294 L
350.85600 415.73849 L
351.71121 415.73849 L
@c
351.71121 429.02646 m
352.76372 429.02646 L
355.06630 428.96069 355.92151 427.64485 356.64491 425.53984 C
361.57861 411.92306 L
362.23654 409.94957 361.51285 407.84457 359.47361 407.05512 C
358.48687 406.72630 357.36860 406.79206 356.31609 407.12088 C
355.13206 407.77880 354.73720 408.63402 354.27685 409.81805 C
351.71121 409.81805 L
349.08009 409.81805 L
348.22488 407.51575 346.77751 406.26567 344.08035 406.98935 C
342.83055 407.44970 342.04110 408.37068 341.71228 409.48923 C
341.51499 410.14687 341.51499 410.87055 341.71228 411.66000 C
341.71228 411.72576 341.77805 411.85729 341.77805 411.98882 C
346.77751 425.80290 L
347.50120 427.77638 348.48794 429.02646 350.79024 429.02646 C
351.71121 429.02646 L
@c
383.48447 420.47490 m
385.19490 420.47490 386.51046 419.09329 386.51046 417.44891 C
386.51046 415.80425 385.19490 414.42293 383.48447 414.42293 C
381.77405 414.42293 380.45849 415.80425 380.45849 417.44891 C
380.45849 419.09329 381.77405 420.47490 383.48447 420.47490 C
@c
384.14239 428.43430 m
385.78677 428.43430 387.16838 427.05298 387.16838 425.40831 C
387.16838 423.76365 385.78677 422.38233 384.14239 422.38233 C
382.43197 422.38233 381.11641 423.76365 381.11641 425.40831 C
381.11641 427.05298 382.43197 428.43430 384.14239 428.43430 C
@c
379.07717 434.61780 m
380.72154 434.61780 382.10315 433.30224 382.10315 431.59181 C
382.10315 429.94743 380.72154 428.56583 379.07717 428.56583 C
377.43250 428.56583 376.05090 429.94743 376.05090 431.59181 C
376.05090 433.30224 377.43250 434.61780 379.07717 434.61780 C
@c
371.31477 435.27572 m
373.09068 435.27572 374.40652 433.89439 374.40652 432.18397 C
374.40652 430.53931 373.09068 429.15798 371.31477 429.15798 C
369.67011 429.15798 368.28850 430.53931 368.28850 432.18397 C
368.28850 433.89439 369.67011 435.27572 371.31477 435.27572 C
@c
374.07742 428.56583 m
370.65685 428.56583 367.95969 425.86866 367.95969 422.44809 C
367.95969 419.15906 370.65685 416.46217 374.07742 416.46217 C
377.43250 416.46217 380.12967 419.15906 380.12967 422.44809 C
380.12967 425.86866 377.43250 428.56583 374.07742 428.56583 C
@c
341.71228 412.38340 m
341.71228 412.44945 341.71228 412.58098 341.71228 412.64674 C
341.90957 413.56772 341.90957 414.48869 341.71228 415.47543 C
341.71228 415.47543 341.71228 415.54120 341.71228 415.60696 C
341.38346 416.92252 340.79131 418.04079 339.60728 418.83024 C
341.12013 420.27761 341.38346 422.25080 340.98860 424.22428 C
340.79131 424.94769 340.52825 425.60561 340.06762 426.26353 C
338.15991 428.69735 335.26545 428.76312 332.30523 428.76312 C
332.17370 428.76312 331.97641 428.76312 331.84488 428.76312 C
330.20022 428.76312 328.55556 428.76312 326.91118 428.76312 C
323.81943 428.76312 322.30630 427.64485 322.17477 424.48734 C
322.17477 411.72576 L
322.17477 411.00208 322.24054 410.27839 322.50359 409.55499 C
322.70088 409.09436 L
322.83269 408.89707 L
322.89846 408.63402 323.09575 408.43644 323.29304 408.17339 C
323.75339 407.84457 324.14825 407.64728 324.60860 407.51575 C
325.06923 407.38394 L
325.66110 407.18665 326.31902 407.12088 326.91118 407.12088 C
328.55556 407.12088 330.20022 407.12088 331.84488 407.12088 C
332.17370 407.12088 332.56857 407.12088 332.96315 407.12088 C
337.10740 407.25241 340.79131 408.17339 341.71228 412.38340 C
@c
331.84488 413.56772 m
330.20022 413.56772 L
330.20022 415.47543 L
331.84488 415.47543 L
332.37099 415.47543 L
333.16044 415.47543 334.01565 415.54120 334.08142 414.55446 C
334.01565 413.50195 333.09468 413.56772 332.23946 413.56772 C
331.84488 413.56772 L
@c
331.84488 420.86948 m
330.20022 420.86948 L
330.20022 422.51386 L
330.72661 422.51386 331.25272 422.51386 331.84488 422.51386 C
332.17370 422.51386 332.50280 422.44809 332.83162 422.38233 C
333.35773 422.38233 333.42350 422.25080 333.48954 421.72441 C
333.42350 420.80372 332.63433 420.86948 331.91065 420.86948 C
331.84488 420.86948 L
@c
270.73276 415.73849 m
271.58797 415.73849 L
270.73276 418.63294 L
269.94331 415.73849 L
270.73276 415.73849 L
@c
270.73276 429.02646 m
271.78526 429.02646 L
274.15332 428.96069 274.94277 427.64485 275.66646 425.53984 C
280.53439 411.98882 L
280.53439 425.14526 L
280.73169 427.18450 281.78419 428.56583 283.88920 429.02646 C
286.32331 429.35528 288.09950 428.50006 289.34929 426.39506 C
293.29625 420.08003 L
293.29625 425.40831 L
293.29625 427.05298 294.08570 428.30277 295.73008 428.89465 C
296.78287 429.15798 297.83509 429.09222 298.82183 428.76312 C
300.46620 428.10548 300.92683 426.92117 300.99260 425.27679 C
300.99260 410.93631 L
300.92683 408.96283 300.07162 407.58151 298.09814 407.05512 C
295.46702 406.46296 293.49354 407.44970 292.11222 409.55499 C
288.42831 415.73849 L
288.42831 410.47597 L
288.29679 408.89707 287.63887 407.77880 286.06025 407.12088 C
285.27080 406.85783 284.34983 406.85783 283.49461 407.05512 C
282.17906 407.31817 281.12627 408.10762 280.73169 409.48923 C
280.40287 408.30491 279.67918 407.51575 278.56091 407.05512 C
277.50841 406.72630 276.39014 406.79206 275.40340 407.12088 C
274.15332 407.77880 273.82450 408.63402 273.29811 409.81805 C
270.73276 409.81805 L
268.16712 409.81805 L
267.83830 408.89707 L
266.85156 406.98935 264.81231 406.33143 262.77307 407.12088 C
262.18091 407.38394 261.65452 407.71304 261.32570 408.23915 C
258.95764 405.73956 256.19471 406.72630 254.55005 409.29165 C
251.19524 414.62022 L
250.66885 414.09383 L
250.66885 410.54173 L
250.53732 409.02860 250.01093 407.91033 248.62961 407.25241 C
247.64287 406.85783 246.45883 406.79206 245.40633 407.05512 C
245.01146 407.12088 L
244.48535 407.38394 244.02472 407.64728 243.56438 408.10762 C
243.30104 408.37068 L
242.97222 408.89707 242.77493 409.35742 242.64340 409.94957 C
242.57764 410.27839 242.57764 410.54173 242.57764 410.80479 C
242.57764 425.40831 L
242.70917 427.18450 243.49861 428.30277 245.20876 428.89465 C
246.19550 429.09222 247.11647 429.09222 248.03745 428.89465 C
249.68211 428.43430 250.47156 427.31603 250.66885 425.67137 C
250.73461 425.01345 250.66885 424.35581 250.66885 423.63213 C
254.28699 427.71061 L
255.47102 429.02646 256.85235 429.42104 258.56277 428.82888 C
259.22069 428.50006 259.68104 428.10548 260.14167 427.57909 C
260.93112 426.26353 260.66778 424.81616 259.87861 423.63213 C
259.48375 423.10602 259.08917 422.71115 258.69430 422.25080 C
256.98416 420.54066 L
261.39146 413.56772 L
265.79906 425.80290 L
266.52246 427.77638 267.50920 429.02646 269.74602 429.02646 C
270.73276 429.02646 L
@c
301.58476 425.21102 m
301.65052 427.05298 302.50573 428.30277 304.28164 428.89465 C
305.26838 429.15798 306.32117 429.09222 307.30791 428.82888 C
308.95228 428.30277 309.74173 426.98721 309.74173 425.27679 C
309.74173 415.47543 L
309.87326 413.89654 310.33389 413.43619 311.97827 413.43619 C
313.35987 413.56772 313.49140 414.48869 313.49140 415.67272 C
313.49140 425.53984 L
313.62293 427.31603 314.47814 428.36854 316.12280 428.89465 C
316.97773 429.09222 317.76718 429.09222 318.62239 429.02646 C
320.53011 428.56583 321.51685 427.18450 321.58261 425.21102 C
321.58261 414.94904 L
321.45109 410.67326 319.14879 407.97609 315.07030 406.98935 C
313.22835 406.52872 311.38639 406.52872 309.47868 406.79206 C
304.74227 407.44970 301.65052 410.27839 301.58476 415.14633 C
301.58476 425.21102 L
@c
222.05339 413.76501 m
221.98734 414.22535 221.92157 414.68598 221.92157 415.14633 C
221.92157 425.21102 L
221.92157 425.53984 221.98734 425.86866 222.05339 426.19776 C
222.31644 427.51332 223.17165 428.36854 224.61874 428.89465 C
225.60548 429.15798 226.65798 429.09222 227.64472 428.82888 C
229.28939 428.30277 230.07883 426.98721 230.14460 425.27679 C
230.14460 415.47543 L
230.21036 413.89654 230.60494 413.43619 232.31537 413.43619 C
233.69698 413.56772 233.82850 414.48869 233.82850 415.67272 C
233.82850 425.53984 L
233.96003 427.31603 234.74948 428.36854 236.52539 428.89465 C
237.31483 429.09222 238.10428 429.09222 238.95950 429.02646 C
240.93298 428.56583 241.98548 427.18450 241.98548 425.21102 C
241.98548 414.94904 L
241.85395 410.87055 239.61742 407.97609 235.40712 406.98935 C
233.56517 406.52872 231.65745 406.52872 229.81578 406.79206 C
225.60548 407.31817 222.64526 409.75228 222.05339 413.76501 C
@c
F

%%PageTrailer
@rs
@rs
%%Trailer
@EndSysCorelDict
end
%%DocumentSuppliedResources: procset wCorel9Dict 9.0 0
%%EOF
